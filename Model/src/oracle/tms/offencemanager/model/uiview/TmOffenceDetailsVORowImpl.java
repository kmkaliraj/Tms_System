package oracle.tms.offencemanager.model.uiview;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 15 16:22:56 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TmOffenceDetailsVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        VehNo {
            public Object get(TmOffenceDetailsVORowImpl obj) {
                return obj.getVehNo();
            }

            public void put(TmOffenceDetailsVORowImpl obj, Object value) {
                obj.setVehNo((String)value);
            }
        }
        ,
        Image {
            public Object get(TmOffenceDetailsVORowImpl obj) {
                return obj.getImage();
            }

            public void put(TmOffenceDetailsVORowImpl obj, Object value) {
                obj.setImage((BlobDomain)value);
            }
        }
        ,
        OffenceDetailId {
            public Object get(TmOffenceDetailsVORowImpl obj) {
                return obj.getOffenceDetailId();
            }

            public void put(TmOffenceDetailsVORowImpl obj, Object value) {
                obj.setOffenceDetailId((DBSequence)value);
            }
        }
        ,
        OffenceStatus {
            public Object get(TmOffenceDetailsVORowImpl obj) {
                return obj.getOffenceStatus();
            }

            public void put(TmOffenceDetailsVORowImpl obj, Object value) {
                obj.setOffenceStatus((String)value);
            }
        }
        ,
        OffenceId {
            public Object get(TmOffenceDetailsVORowImpl obj) {
                return obj.getOffenceId();
            }

            public void put(TmOffenceDetailsVORowImpl obj, Object value) {
                obj.setOffenceId((Number)value);
            }
        }
        ,
        Time {
            public Object get(TmOffenceDetailsVORowImpl obj) {
                return obj.getTime();
            }

            public void put(TmOffenceDetailsVORowImpl obj, Object value) {
                obj.setTime((Date)value);
            }
        }
        ,
        Place {
            public Object get(TmOffenceDetailsVORowImpl obj) {
                return obj.getPlace();
            }

            public void put(TmOffenceDetailsVORowImpl obj, Object value) {
                obj.setPlace((String)value);
            }
        }
        ,
        ReportedBy {
            public Object get(TmOffenceDetailsVORowImpl obj) {
                return obj.getReportedBy();
            }

            public void put(TmOffenceDetailsVORowImpl obj, Object value) {
                obj.setReportedBy((String)value);
            }
        }
        ,
        TmOffenceVVO1 {
            public Object get(TmOffenceDetailsVORowImpl obj) {
                return obj.getTmOffenceVVO1();
            }

            public void put(TmOffenceDetailsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TmOffenceDetailsVORowImpl object);

        public abstract void put(TmOffenceDetailsVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    /**
     * @param state
     */
    @Override
  public void setNewRowState(byte state) {
   if (state != Row.STATUS_INITIALIZED || getNewRowState() != Row.STATUS_NEW) {
   setNewRowState(state);
       }
  }


    public static final int VEHNO = AttributesEnum.VehNo.index();
    public static final int IMAGE = AttributesEnum.Image.index();
    public static final int OFFENCEDETAILID = AttributesEnum.OffenceDetailId.index();
    public static final int OFFENCESTATUS = AttributesEnum.OffenceStatus.index();
    public static final int OFFENCEID = AttributesEnum.OffenceId.index();
    public static final int TIME = AttributesEnum.Time.index();
    public static final int PLACE = AttributesEnum.Place.index();
    public static final int REPORTEDBY = AttributesEnum.ReportedBy.index();
    public static final int TMOFFENCEVVO1 = AttributesEnum.TmOffenceVVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TmOffenceDetailsVORowImpl() {
    }

    /**
     * Gets TmOffenceDetailsEO entity object.
     * @return the TmOffenceDetailsEO
     */
    public EntityImpl getTmOffenceDetailsEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for VEH_NO using the alias name VehNo.
     * @return the VEH_NO
     */
    public String getVehNo() {
        return (String) getAttributeInternal(VEHNO);
    }

    /**
     * Sets <code>value</code> as attribute value for VEH_NO using the alias name VehNo.
     * @param value value to set the VEH_NO
     */
    public void setVehNo(String value) {
        setAttributeInternal(VEHNO, value);
    }

    /**
     * Gets the attribute value for IMAGE using the alias name Image.
     * @return the IMAGE
     */
    public BlobDomain getImage() {
        return (BlobDomain) getAttributeInternal(IMAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for IMAGE using the alias name Image.
     * @param value value to set the IMAGE
     */
    public void setImage(BlobDomain value) {
        setAttributeInternal(IMAGE, value);
    }

    /**
     * Gets the attribute value for OFFENCE_DETAIL_ID using the alias name OffenceDetailId.
     * @return the OFFENCE_DETAIL_ID
     */
    public DBSequence getOffenceDetailId() {
        return (DBSequence)getAttributeInternal(OFFENCEDETAILID);
    }

    /**
     * Sets <code>value</code> as attribute value for OFFENCE_DETAIL_ID using the alias name OffenceDetailId.
     * @param value value to set the OFFENCE_DETAIL_ID
     */
    public void setOffenceDetailId(DBSequence value) {
        setAttributeInternal(OFFENCEDETAILID, value);
    }

    /**
     * Gets the attribute value for OFFENCE_STATUS using the alias name OffenceStatus.
     * @return the OFFENCE_STATUS
     */
    public String getOffenceStatus() {
        return (String) getAttributeInternal(OFFENCESTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for OFFENCE_STATUS using the alias name OffenceStatus.
     * @param value value to set the OFFENCE_STATUS
     */
    public void setOffenceStatus(String value) {
        setAttributeInternal(OFFENCESTATUS, value);
    }

    /**
     * Gets the attribute value for OFFENCE_ID using the alias name OffenceId.
     * @return the OFFENCE_ID
     */
    public Number getOffenceId() {
        return (Number) getAttributeInternal(OFFENCEID);
    }

    /**
     * Sets <code>value</code> as attribute value for OFFENCE_ID using the alias name OffenceId.
     * @param value value to set the OFFENCE_ID
     */
    public void setOffenceId(Number value) {
        setAttributeInternal(OFFENCEID, value);
    }

    /**
     * Gets the attribute value for TIME using the alias name Time.
     * @return the TIME
     */
    public Date getTime() {
        return (Date) getAttributeInternal(TIME);
    }

    /**
     * Sets <code>value</code> as attribute value for TIME using the alias name Time.
     * @param value value to set the TIME
     */
    public void setTime(Date value) {
        setAttributeInternal(TIME, value);
    }

    /**
     * Gets the attribute value for PLACE using the alias name Place.
     * @return the PLACE
     */
    public String getPlace() {
        return (String) getAttributeInternal(PLACE);
    }

    /**
     * Sets <code>value</code> as attribute value for PLACE using the alias name Place.
     * @param value value to set the PLACE
     */
    public void setPlace(String value) {
        setAttributeInternal(PLACE, value);
    }

    /**
     * Gets the attribute value for REPORTED_BY using the alias name ReportedBy.
     * @return the REPORTED_BY
     */
    public String getReportedBy() {
        return (String) getAttributeInternal(REPORTEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for REPORTED_BY using the alias name ReportedBy.
     * @param value value to set the REPORTED_BY
     */
    public void setReportedBy(String value) {
        setAttributeInternal(REPORTEDBY, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> TmOffenceVVO1.
     */
    public RowSet getTmOffenceVVO1() {
        return (RowSet)getAttributeInternal(TMOFFENCEVVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
