package oracle.tms.offencemanager.model.appmodule;


import java.util.Iterator;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;


import oracle.jbo.server.ViewObjectImpl;

import oracle.tms.offencemanager.model.appmodule.common.TrafficManagerAM;
import oracle.tms.offencemanager.model.uiview.OffenceDetailJoinedVOImpl;
import oracle.tms.offencemanager.model.uiview.TmOffenceDetailsVOImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 23 11:04:43 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TrafficManagerAMImpl extends ApplicationModuleImpl implements TrafficManagerAM {
    /**
     * This is the default constructor (do not remove).
     */
    public TrafficManagerAMImpl() {
    }

    /**
     * Container's getter for TmOwnerdetails1.
     * @return TmOwnerdetails1
     */
    public ViewObjectImpl getTmOwnerdetails1() {
        return (ViewObjectImpl)findViewObject("TmOwnerdetails1");
    }

    /**
     * Container's getter for TmVehicledetails1.
     * @return TmVehicledetails1
     */
    public ViewObjectImpl getTmVehicledetails1() {
        return (ViewObjectImpl)findViewObject("TmVehicledetails1");
    }

    /**
     * Container's getter for TmOffenceDetails1.
     * @return TmOffenceDetails1
     */
    public TmOffenceDetailsVOImpl getTmOffenceDetails1() {
        return (TmOffenceDetailsVOImpl)findViewObject("TmOffenceDetails1");
    }


    /**
     * Container's getter for TmOffenceDetails2.
     * @return TmOffenceDetails2
     */
    public TmOffenceDetailsVOImpl getTmOffenceDetails2() {
        return (TmOffenceDetailsVOImpl)findViewObject("TmOffenceDetails2");
    }


    /**
     * Container's getter for OffenceDetailJoined1.
     * @return OffenceDetailJoined1
     */
    public ViewObjectImpl getOffenceDetailJoined1() {
        return (ViewObjectImpl)findViewObject("OffenceDetailJoined1");
    }

    /**
     * Container's getter for TmVehicleOwner1.
     * @return TmVehicleOwner1
     */
    public ViewObjectImpl getTmVehicleOwner1() {
        return (ViewObjectImpl)findViewObject("TmVehicleOwner1");
    }

    /**
     * Container's getter for OffenceDetailJoined2.
     * @return OffenceDetailJoined2
     */
    public ViewObjectImpl getOffenceDetailJoined2() {
        return (ViewObjectImpl)findViewObject("OffenceDetailJoined2");
    }


    /**
     * Container's getter for QueryOffence1.
     * @return QueryOffence1
     */
    public ViewObjectImpl getQueryOffence1() {
        return (ViewObjectImpl)findViewObject("QueryOffence1");
    }


    /**
     * Container's getter for TmVehDetTmOffenceDetLink1.
     * @return TmVehDetTmOffenceDetLink1
     */
    public ViewLinkImpl getTmVehDetTmOffenceDetLink1() {
        return (ViewLinkImpl)findViewLink("TmVehDetTmOffenceDetLink1");
    }

    /**
     * Container's getter for OwnerVehOffenceLink1.
     * @return OwnerVehOffenceLink1
     */
    public ViewLinkImpl getOwnerVehOffenceLink1() {
        return (ViewLinkImpl)findViewLink("OwnerVehOffenceLink1");
    }

    public void searchPendingOffences(String status){
      ViewObjectImpl offenceVO = getOffenceDetailJoined1();
      if(status.equals("All"))
        offenceVO.executeQuery();
      else{
      ViewCriteria offenceVC = offenceVO.createViewCriteria();
      ViewCriteriaRow offenceVCRow = offenceVC.createViewCriteriaRow();      
      offenceVCRow.setAttribute("OffenceStatus", status);
      offenceVC.addRow(offenceVCRow);
      offenceVO.applyViewCriteria(offenceVC);
      offenceVO.executeQuery();      
      }
    }
    
    public void calculateTotal(){
            
      
    }
 
    public void onDeleteOffence(DBSequence key){
        System.out.println("Key Value : "+ key);
      ViewObjectImpl offenceVO = getTmOffenceDetails1();
      ViewCriteria offenceVC = offenceVO.createViewCriteria();
      ViewCriteriaRow offenceVCRow = offenceVC.createViewCriteriaRow();      
      offenceVCRow.setAttribute("OffenceDetailId",key );
      offenceVC.addRow(offenceVCRow);
      offenceVO.applyViewCriteria(offenceVC);
      offenceVO.executeQuery();
      Row row = offenceVO.first();
      if(row!=null){
          try{
        row.remove();
            boolean applyViewCriteriaName = offenceVO.removeApplyViewCriteriaName(offenceVC.getName());
         this.getDBTransaction().commit();
          }
          catch (Exception e){
            this.getDBTransaction().rollback();
            e.printStackTrace();
          }
      
        }
    }
  
    /**
     * Container's getter for TmVehicledetails2.
     * @return TmVehicledetails2
     */
    public ViewObjectImpl getTmVehicledetails2() {
        return (ViewObjectImpl)findViewObject("TmVehicledetails2");
    }

    /**
     * Container's getter for TmOwnerDetTmVehDetLink1.
     * @return TmOwnerDetTmVehDetLink1
     */
    public ViewLinkImpl getTmOwnerDetTmVehDetLink1() {
        return (ViewLinkImpl)findViewLink("TmOwnerDetTmVehDetLink1");
    }

    /**
     * Container's getter for VehicletypeV1.
     * @return VehicletypeV1
     */
    public ViewObjectImpl getVehicletypeV1() {
        return (ViewObjectImpl)findViewObject("VehicletypeV1");
    }

    /**
     * Container's getter for VehiclecategoryV1.
     * @return VehiclecategoryV1
     */
    public ViewObjectImpl getVehiclecategoryV1() {
        return (ViewObjectImpl)findViewObject("VehiclecategoryV1");
    }
}
