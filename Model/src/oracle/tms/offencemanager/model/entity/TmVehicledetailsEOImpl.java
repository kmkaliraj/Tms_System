package oracle.tms.offencemanager.model.entity;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jul 26 20:01:41 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TmVehicledetailsEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * Validation method for DateOfManufacture.
     */
    public boolean validateDateOfManufacture(Date dateofmanufacture) {
      return dateofmanufacture.compareTo(new Date()) <0 ;

    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        VehNo {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getVehNo();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setVehNo((String)value);
            }
        }
        ,
        VehType {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getVehType();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setVehType((String)value);
            }
        }
        ,
        EngineNo {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getEngineNo();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setEngineNo((String)value);
            }
        }
        ,
        ModelN0 {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getModelN0();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setModelN0((String)value);
            }
        }
        ,
        VehName {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getVehName();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setVehName((String)value);
            }
        }
        ,
        VehColor {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getVehColor();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setVehColor((String)value);
            }
        }
        ,
        ManufacturerName {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getManufacturerName();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setManufacturerName((String)value);
            }
        }
        ,
        DateOfManufacture {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getDateOfManufacture();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setDateOfManufacture((Date)value);
            }
        }
        ,
        NoOfCylinders {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getNoOfCylinders();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setNoOfCylinders((Number)value);
            }
        }
        ,
        CubicCapacity {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getCubicCapacity();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setCubicCapacity((Number)value);
            }
        }
        ,
        FuelUsed {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getFuelUsed();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setFuelUsed((String)value);
            }
        }
        ,
        OwnerId {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getOwnerId();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setOwnerId((Number)value);
            }
        }
        ,
        VehCategory {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getVehCategory();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setVehCategory((String)value);
            }
        }
        ,
        TmOwnerdetails {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getTmOwnerdetails();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setTmOwnerdetails((TmOwnerdetailsEOImpl)value);
            }
        }
        ,
        TmOffenceDetailsEO {
            public Object get(TmVehicledetailsEOImpl obj) {
                return obj.getTmOffenceDetailsEO();
            }

            public void put(TmVehicledetailsEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TmVehicledetailsEOImpl object);

        public abstract void put(TmVehicledetailsEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int VEHNO = AttributesEnum.VehNo.index();
    public static final int VEHTYPE = AttributesEnum.VehType.index();
    public static final int ENGINENO = AttributesEnum.EngineNo.index();
    public static final int MODELN0 = AttributesEnum.ModelN0.index();
    public static final int VEHNAME = AttributesEnum.VehName.index();
    public static final int VEHCOLOR = AttributesEnum.VehColor.index();
    public static final int MANUFACTURERNAME = AttributesEnum.ManufacturerName.index();
    public static final int DATEOFMANUFACTURE = AttributesEnum.DateOfManufacture.index();
    public static final int NOOFCYLINDERS = AttributesEnum.NoOfCylinders.index();
    public static final int CUBICCAPACITY = AttributesEnum.CubicCapacity.index();
    public static final int FUELUSED = AttributesEnum.FuelUsed.index();
    public static final int OWNERID = AttributesEnum.OwnerId.index();
    public static final int VEHCATEGORY = AttributesEnum.VehCategory.index();
    public static final int TMOWNERDETAILS = AttributesEnum.TmOwnerdetails.index();
    public static final int TMOFFENCEDETAILSEO = AttributesEnum.TmOffenceDetailsEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TmVehicledetailsEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("oracle.tms.offencemanager.model.entity.TmVehicledetailsEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for VehNo, using the alias name VehNo.
     * @return the VehNo
     */
    public String getVehNo() {
        return (String)getAttributeInternal(VEHNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for VehNo.
     * @param value value to set the VehNo
     */
    public void setVehNo(String value) {
        setAttributeInternal(VEHNO, value);
    }

    /**
     * Gets the attribute value for VehType, using the alias name VehType.
     * @return the VehType
     */
    public String getVehType() {
        return (String)getAttributeInternal(VEHTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VehType.
     * @param value value to set the VehType
     */
    public void setVehType(String value) {
        setAttributeInternal(VEHTYPE, value);
    }

    /**
     * Gets the attribute value for EngineNo, using the alias name EngineNo.
     * @return the EngineNo
     */
    public String getEngineNo() {
        return (String)getAttributeInternal(ENGINENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for EngineNo.
     * @param value value to set the EngineNo
     */
    public void setEngineNo(String value) {
        setAttributeInternal(ENGINENO, value);
    }

    /**
     * Gets the attribute value for ModelN0, using the alias name ModelN0.
     * @return the ModelN0
     */
    public String getModelN0() {
        return (String)getAttributeInternal(MODELN0);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModelN0.
     * @param value value to set the ModelN0
     */
    public void setModelN0(String value) {
        setAttributeInternal(MODELN0, value);
    }

    /**
     * Gets the attribute value for VehName, using the alias name VehName.
     * @return the VehName
     */
    public String getVehName() {
        return (String)getAttributeInternal(VEHNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for VehName.
     * @param value value to set the VehName
     */
    public void setVehName(String value) {
        setAttributeInternal(VEHNAME, value);
    }

    /**
     * Gets the attribute value for VehColor, using the alias name VehColor.
     * @return the VehColor
     */
    public String getVehColor() {
        return (String)getAttributeInternal(VEHCOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for VehColor.
     * @param value value to set the VehColor
     */
    public void setVehColor(String value) {
        setAttributeInternal(VEHCOLOR, value);
    }

    /**
     * Gets the attribute value for ManufacturerName, using the alias name ManufacturerName.
     * @return the ManufacturerName
     */
    public String getManufacturerName() {
        return (String)getAttributeInternal(MANUFACTURERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManufacturerName.
     * @param value value to set the ManufacturerName
     */
    public void setManufacturerName(String value) {
        setAttributeInternal(MANUFACTURERNAME, value);
    }

    /**
     * Gets the attribute value for DateOfManufacture, using the alias name DateOfManufacture.
     * @return the DateOfManufacture
     */
    public Date getDateOfManufacture() {
        return (Date)getAttributeInternal(DATEOFMANUFACTURE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DateOfManufacture.
     * @param value value to set the DateOfManufacture
     */
    public void setDateOfManufacture(Date value) {
        setAttributeInternal(DATEOFMANUFACTURE, value);
    }

    /**
     * Gets the attribute value for NoOfCylinders, using the alias name NoOfCylinders.
     * @return the NoOfCylinders
     */
    public Number getNoOfCylinders() {
        return (Number)getAttributeInternal(NOOFCYLINDERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfCylinders.
     * @param value value to set the NoOfCylinders
     */
    public void setNoOfCylinders(Number value) {
        setAttributeInternal(NOOFCYLINDERS, value);
    }

    /**
     * Gets the attribute value for CubicCapacity, using the alias name CubicCapacity.
     * @return the CubicCapacity
     */
    public Number getCubicCapacity() {
        return (Number)getAttributeInternal(CUBICCAPACITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CubicCapacity.
     * @param value value to set the CubicCapacity
     */
    public void setCubicCapacity(Number value) {
        setAttributeInternal(CUBICCAPACITY, value);
    }

    /**
     * Gets the attribute value for FuelUsed, using the alias name FuelUsed.
     * @return the FuelUsed
     */
    public String getFuelUsed() {
        return (String)getAttributeInternal(FUELUSED);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuelUsed.
     * @param value value to set the FuelUsed
     */
    public void setFuelUsed(String value) {
        setAttributeInternal(FUELUSED, value);
    }

    /**
     * Gets the attribute value for OwnerId, using the alias name OwnerId.
     * @return the OwnerId
     */
    public Number getOwnerId() {
        return (Number)getAttributeInternal(OWNERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OwnerId.
     * @param value value to set the OwnerId
     */
    public void setOwnerId(Number value) {
        setAttributeInternal(OWNERID, value);
    }

    /**
     * Gets the attribute value for VehCategory, using the alias name VehCategory.
     * @return the VehCategory
     */
    public String getVehCategory() {
        return (String)getAttributeInternal(VEHCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for VehCategory.
     * @param value value to set the VehCategory
     */
    public void setVehCategory(String value) {
        setAttributeInternal(VEHCATEGORY, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity TmOwnerdetailsEOImpl.
     */
    public TmOwnerdetailsEOImpl getTmOwnerdetails() {
        return (TmOwnerdetailsEOImpl)getAttributeInternal(TMOWNERDETAILS);
    }

    /**
     * Sets <code>value</code> as the associated entity TmOwnerdetailsEOImpl.
     */
    public void setTmOwnerdetails(TmOwnerdetailsEOImpl value) {
        setAttributeInternal(TMOWNERDETAILS, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTmOffenceDetailsEO() {
        return (RowIterator)getAttributeInternal(TMOFFENCEDETAILSEO);
    }

    /**
     * @param vehNo key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String vehNo) {
        return new Key(new Object[]{vehNo});
    }


}
